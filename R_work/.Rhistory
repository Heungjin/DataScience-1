add <- function(a, b){
add1 = a+b
return (add1)
}
add(1,3)
add2 <- function(){
if(is.numeric(a) == T){
add = a+b
return(add)
} else{
add = paste(a, b, sep = '-')
return(add)
}
}
add2 <- function(a, b){
if(is.numeric(a) == T){
add = a+b
return(add)
} else{
add = paste(a, b, sep = '-')
return(add)
}
}
add2(3, 5)
add2(A, 5)
add2("a", 5)
c(T, T, T) & (T, F, T)
c(T, T, T) & (T, F, T)
c(T, T, T) & c(T, F, T)
5%/%3
5%%3
pi
1:(2*pi)
seq(0, 2*pi, 0.01)
x = seq(0, 2*pi, 0.01)
y = sin(x) + rnorm(length(x))
plot(x,y)
rnorm(length(x)
plot(x,y)
rnorm(length(x))
length(x)
rnorm(30)
y = sin(x)
plot(x,y)
X
X
x
x = seq(0, 2*pi, 0.01)
y = sin(x) + rnorm(length(x))
plot(x,y)
x
y
rnorm(length(x))
data1 = read.table('clipboard', header = T)
data1 = read.table('clipboard', header = T)
data1 = read.table('clipboard', header = T)
data1 = read.table(pipe("pbpaste"), header = T)
data1
data1 = read.table(pipe("pbpaste"), header = T) # for mac
setwd("/Users/yoon/Documents/DataScience/R_work")
data2 = read.csv("data1.csv")
data2 = read.csv("data1.csv")
str(data2)
names(data2) = c("x1", "x2")
str(data2)
install.packages("xlsx")
library(xlsx)
dyn.load("/Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/server/libjvm.dylib")
library(rJava)
library(xlsx)
data3 = read.xlsx("data1.xlsx", sheetIndex = 1, header = T)
data3
str(data3)
str(iris3)
str(iris)
iris3[, , 1]
View(iris3)
str(iris3)
View(iris3)
iris3[, , 1]
iris3[1,1,]
str(iris3)
iris3[1]
iris3[, , 1]
iris3[, , 2]
iris3[1, 1, ]
View(iris3)
iris3[, , 1]
iris3[1, 1, ]
str(iris3)
iris3[1]
iris3[[[1]]]
iris3[[1]]
install.packages("readbitmap")
library(readbitmap)
read.bitmap("7.bmp")
bmp1 = read.bitmap("7.bmp")
str(bmp1)
dim(bmp1)
jpg1 = read.bitmap("7.jpg")
jpg1 = read.bitmap("7.jpg")
str(jpg1)
dim(jpg1
)
png1 = read.bitmap("7.png")
dim(png1)
png1 = read.bitmap("7.png", 4) # png is 4dim for transparency
png1 = read.bitmap("7.png", dim=4) # png is 4dim for transparency
matrix(jpg1, nrow=1, byrow = T)
matrix(bmp1, nrow=1, byrow = T)
matrix(jpg1, nrow=1, byrow = T)
matrix(png1, nrow=1, byrow = T)
dim(png1)
png1 = read.bitmap("7.png", channel = 4) # png is 4dim for transparency
png1 = read.bitmap("7.png", channel = 3) # png is 4dim for transparency
bmp_m = matrix(bmp1, nrow=1, byrow = T)
jpg_m = matrix(jpg1, nrow=1, byrow = T)
png_m = matrix(png1, nrow=1, byrow = T)
dim(png_m)
jpg_m[1:10]
list.dirs(".", full.names = T) # get list in directory. punct is current folder
list.dirs("testfolder", full.names = T) # get list in directory.
list.dirs("testfolder", full.names = T) # get list in directory.
list.dirs("testfolder", full.names = T) # get list in directory.
list.dirs("testfolder", full.names = T) # get list in directory.
list.file('testfolder')
list.files('testfolder')
list1 = list.dirs("testfolder", full.names = T) # get list in directory.
list1
for (i in 2:length(list1)){
list2 = list.files(list1[1], full.names = T,
pattern = '.png',
include.dirs = T) # get files in directory.
print(list2)
}
length(list1)
for (i in 2:length(list1)){
print(i)
list2 = list.files(list1[1], full.names = T,
pattern = '.png',
include.dirs = T) # get files in directory.
print(list2)
}
list1[1]
for (i in 2:length(list1)){
list2 = list.files(list1[1], full.names = T,
pattern = '.png',
include.dirs = T) # get files in directory.
print(list2)
}
